# App Server: NPM w/o Proxying | Backend Server: reflex
version: "3.3"
services:
  backend:
    build:
      context: ${CODECOMP_DIR}/codecomp-backend
      dockerfile: Dockerfile
      # args:
      #   DEVELOPER_TOOLS: 1
    image: white105/codecomp-backend:latest
    networks:
      codecomppub0:
    # this must be availabe to host so the frontend can talk to it
    # because proxying is not enabled via npm server
    ports:
      - "127.0.0.1:9090:8080"
    volumes:
      - ${CODECOMP_DIR}/codecomp-backend:/opt/go/src/codecomp-backend
    environment:
      - SERVER=reflex
      - LISTEN_PORT=8080
      - LISTEN_ADDR=0.0.0.0
  codecomp:
    build:
      context: ${CODECOMP_DIR}/codecomp
      dockerfile: Dockerfile
      # args:
      #   DEVELOPER_TOOLS: 1
    image: white105/codecomp:latest
    ports:
      - "127.0.0.1:8080:8080"
      - "127.0.0.1:8443:8443"
    # this configuration performs automatic refreshes
    # but it does not proxy traffic because npm cannot
    # The constructed API_BACKEND_PROTO must be available
    # from host
    environment:
      - SERVER=npm
      - PROXY_ENABLED=0
      - TLS_ENABLED=0
      - INSECURE_LISTEN_PORT=8080
      - API_BACKEND_PROTO=http
      - API_BACKEND_HOST=127.0.0.1
      - API_BACKEND_PORT=9090
      - DEBUG_CONF=0
    # using nginx w/ manual refresh approach
    volumes:
      - ${CODECOMP_DIR}/codecomp/build:/var/www/app
    networks:
      codecomppub0:
    depends_on:
      - backend
networks:
  codecomppub0:
    # Use a custom driver
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.28.21.0/24
    driver_opts:
      com.docker.network.bridge.name: codecomppub0
